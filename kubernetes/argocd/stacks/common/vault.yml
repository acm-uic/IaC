---
apiVersion: v1
kind: Namespace
metadata:
  name: vault
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  destination:
    namespace: vault
    server: 'https://kubernetes.default.svc'
  sources:
  - repoURL: 'https://helm.releases.hashicorp.com'
    targetRevision: 0.25.0
    chart: vault
    helm:
      valueFiles:
        - values.yaml
        - $values/kubernetes/argocd/stacks/common/vault-values-override.yml
  - repoURL: 'git@github.com:acm-uic/IaC.git'
    targetRevision: HEAD
    ref: values
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-k8s-role
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["serviceaccounts", "serviceaccounts/token"]
  verbs: ["create", "update", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["rolebindings", "clusterrolebindings"]
  verbs: ["create", "update", "delete"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "clusterroles"]
  verbs: ["bind", "escalate", "create", "update", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-token-creator-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-k8s-role
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: vault
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-assumed-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-assumed-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-assumed-role-abilities
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vault-assumed-role
subjects:
  - kind: ServiceAccount
    name: vault-assumed-sa
    namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-auth
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-role-tokenreview-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault-auth
    namespace: default
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: vaulttransport
  namespace: vault
spec:
  serverName: "vault.acmuic.org"
  insecureSkipVerify: true
  rootCAsSecrets:
    - vault-ha-tls
  maxIdleConnsPerHost: 1
  forwardingTimeouts:
    dialTimeout: 42s
    responseHeaderTimeout: 42s
    idleConnTimeout: 42s
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: vault
  namespace: vault
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`vault.acmuic.org`)
    priority: 10
    services:
    - kind: Service
      name: vault-ui
      namespace: vault
      passHostHeader: true
      port: 8200
      responseForwarding:
        flushInterval: 1ms
      scheme: https
      serversTransport: vaulttransport
      strategy: RoundRobin
      weight: 10
  tls:
    secretName: vault-ha-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: vault-raft-cert
  namespace: vault
spec:
  dnsNames:
    - "vault.acmuic.org"
    - "*.vault.svc.cluster.local"
    - "*.vault-internal"
    - "*.vault-internal.vault.svc.cluster.local"
    - "*.vault"
    - "*.vault.svc"
  ipAddresses:
    - 127.0.0.1
  usages:
    - server auth
    - digital signature
    - key encipherment
  secretName: vault-ha-tls
  issuerRef:
    kind: ClusterIssuer
    name: acmuic-self-ca
